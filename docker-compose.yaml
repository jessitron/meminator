services:
  backend-for-frontend:
    build:
      context: services/backend-for-frontend-nodejs
      dockerfile: Dockerfile
      platforms:
        # this is useful for pushing to Dockerhub, not for local builds
        - linux/amd64
        - linux/arm64
    image: ${IMAGE_REPO_USER}/backend-for-frontend-nodejs:${IMAGE_TAG}
    ports:
      - "10115:10114" # Expose the port your Express app is listening on
    environment:
      - OTEL_SERVICE_NAME=backend-for-frontend-nodejs

  meminator:
    build:
      context: services/meminator-nodejs
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
    image: ${IMAGE_REPO_USER}/meminator-nodejs:${IMAGE_TAG}
    ports:
      - "10116:10114" # they can't be the same
    environment:
      - OTEL_SERVICE_NAME=meminator-nodejs

  phrase-picker:
    build:
      context: services/phrase-picker-nodejs
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
    image: ${IMAGE_REPO_USER}/phrase-picker-nodejs:${IMAGE_TAG}
    ports:
      - "10117:10114" # the outer ports can't be the same
    environment:
      - OTEL_SERVICE_NAME=phrase-picker-nodejs

  image-picker:
    build:
      context: services/image-picker-nodejs
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
    image: ${IMAGE_REPO_USER}/image-picker-nodejs:${IMAGE_TAG}
    ports:
      - "10118:10114" # the outer ports can't be the same
    environment:
      - BUCKET_NAME
      - OTEL_SERVICE_NAME=image-picker-nodejs

  web:
    build:
      context: services/web
      dockerfile: Dockerfile
      args:
        HONEYCOMB_API_KEY: ${HONEYCOMB_API_KEY}
      platforms:
        - linux/amd64
        - linux/arm64
    image: ${IMAGE_REPO_USER}/web:${IMAGE_TAG}
    # volumes: # uncomment this for faster development on the frontend
    #   - ./services/web/dist:/usr/share/nginx/html # Mount directory containing static files -- only do this for development
    ports:
      - "8080:80" # Expose port 8080 for Nginx

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.96.0
    ports:
      - "4317:4317" # OpenTelemetry gRPC
      - "4318:4318" # OpenTelemetry HTTP
    volumes:
      - ./services/otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    environment:
      - HONEYCOMB_API_KEY

  # copied from OpenTelemetry Demo
  opensearch:
    image: opensearchproject/opensearch:2.14.0
    container_name: opensearch
    deploy:
      resources:
        limits:
          memory: 1G
    restart: unless-stopped
    environment:
      - cluster.name=demo-cluster
      - node.name=demo-node
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - OPENSEARCH_JAVA_OPTS=-Xms300m -Xmx300m
      - DISABLE_INSTALL_DEMO_CONFIG=true
      - DISABLE_SECURITY_PLUGIN=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200"
      - "5601"
